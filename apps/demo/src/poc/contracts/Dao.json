{
  "DaoERC721VaultFactory": {
    "abi": [
      "constructor(address _settings)",
      "event Mint(address indexed owner, address indexed token, uint256 id, uint256 price, address vault, uint256 vaultId)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address account)",
      "event Unpaused(address account)",
      "function logic() view returns (address)",
      "function mint(string _name, string _symbol, address _token, uint256 _tokenId, uint256 _supply, uint256 _listPrice, uint256 _fee) returns (uint256)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function renounceOwnership()",
      "function settings() view returns (address)",
      "function transferOwnership(address newOwner)",
      "function unpause()",
      "function vaultCount() view returns (uint256)",
      "function vaults(uint256) view returns (address)"
    ]
  },
  "DaoERC721TokenVault": {
    "abi": [
      "constructor(address _settings)",
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event Bid(address indexed buyer, uint256 price)",
      "event Cash(address indexed owner, uint256 shares)",
      "event FeeClaimed(uint256 fee)",
      "event PriceUpdate(address indexed user, uint256 price)",
      "event Redeem(address indexed redeemer)",
      "event Start(address indexed buyer, uint256 price)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "event UpdateAuctionLength(uint256 length)",
      "event UpdateCuratorFee(uint256 fee)",
      "event Won(address indexed buyer, uint256 price)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function auctionEnd() view returns (uint256)",
      "function auctionLength() view returns (uint256)",
      "function auctionState() view returns (uint8)",
      "function balanceOf(address account) view returns (uint256)",
      "function bid() payable",
      "function cash()",
      "function claimFees()",
      "function curator() view returns (address)",
      "function decimals() view returns (uint8)",
      "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
      "function end()",
      "function fee() view returns (uint256)",
      "function id() view returns (uint256)",
      "function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
      "function initialize(address _curator, address _token, uint256 _id, uint256 _supply, uint256 _listPrice, uint256 _fee, string _name, string _symbol)",
      "function kickCurator(address _curator)",
      "function lastClaimed() view returns (uint256)",
      "function livePrice() view returns (uint256)",
      "function name() view returns (string)",
      "function onERC721Received(address, address, uint256, bytes) returns (bytes4)",
      "function redeem()",
      "function removeReserve(address _user)",
      "function reservePrice() view returns (uint256)",
      "function reserveTotal() view returns (uint256)",
      "function settings() view returns (address)",
      "function start() payable",
      "function symbol() view returns (string)",
      "function token() view returns (address)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address recipient, uint256 amount) returns (bool)",
      "function transferFrom(address sender, address recipient, uint256 amount) returns (bool)",
      "function updateAuctionLength(uint256 _length)",
      "function updateCurator(address _curator)",
      "function updateFee(uint256 _fee)",
      "function updateUserPrice(uint256 _new)",
      "function userPrices(address) view returns (uint256)",
      "function vaultClosed() view returns (bool)",
      "function votingTokens() view returns (uint256)",
      "function weth() view returns (address)",
      "function winning() view returns (address)"
    ]
  },
  "DaoFactory": {
    "abi": [
      "function deploy(address _summoner, address[] _approvedTokens, uint256 _periodDuration, uint256 _votingPeriodLength, uint256 _gracePeriodLength, uint256 _proposalDeposit, uint256 _dilutionBound, uint256 _processingReward) payable returns (address)",
      "constructor()",
      "event Deployed(address indexed summoner)"
    ]
  },
  "DaoERC721Token": {
    "extends": [],
    "abi": [
      "constructor()",
      "event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId)",
      "event ApprovalForAll(address indexed owner, address indexed operator, bool approved)",
      "event Transfer(address indexed from, address indexed to, uint256 indexed tokenId)",
      "function approve(address to, uint256 tokenId)",
      "function balanceOf(address owner) view returns (uint256)",
      "function baseURI() view returns (string)",
      "function getApproved(uint256 tokenId) view returns (address)",
      "function isApprovedForAll(address owner, address operator) view returns (bool)",
      "function mint(address player, string tokenURI) returns (uint256)",
      "function name() view returns (string)",
      "function ownerOf(uint256 tokenId) view returns (address)",
      "function safeTransferFrom(address from, address to, uint256 tokenId)",
      "function safeTransferFrom(address from, address to, uint256 tokenId, bytes _data)",
      "function setApprovalForAll(address operator, bool approved)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)",
      "function symbol() view returns (string)",
      "function tokenByIndex(uint256 index) view returns (uint256)",
      "function tokenOfOwnerByIndex(address owner, uint256 index) view returns (uint256)",
      "function tokenURI(uint256 tokenId) view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transferFrom(address from, address to, uint256 tokenId)"
    ]
  }
}

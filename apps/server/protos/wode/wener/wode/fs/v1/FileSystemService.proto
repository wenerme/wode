syntax = "proto3";
package wener.wode.fs.v1;

import "google/protobuf/timestamp.proto";

option go_package = "github.com/wenerme/wego/gen/wener/wode/fs/v1;filesystemservicev1";

message Target {
  string path = 1;
}

enum EntryType {
  UNSPECIFIED = 0;
  FILE = 1;
  DIRECTORY = 2;
  SYMLINK = 3;
  BLOCK_DEVICE = 4;
  CHARACTER_DEVICE = 5;
  FIFO = 6;
  SOCKET = 7;
}

message FileAttributes {
  int64 size = 1;
  uint32 mode = 2; // POSIX file mode (permissions & type)
  uint32 uid = 3; // User ID of owner
  uint32 gid = 4; // Group ID of owner
  google.protobuf.Timestamp atime = 5; // Last access time
  google.protobuf.Timestamp mtime = 6; // Last modification time
  google.protobuf.Timestamp ctime = 7; // Last status change time
}

message EntryMetadata {
  Target target = 1;
  string name = 2;
  EntryType type = 3;
  FileAttributes attributes = 4;
}

message ReaddirRequest {
  Target target = 1;
}

message ReaddirResponse {
  repeated EntryMetadata data = 1;
}

message GetAttributesRequest {
  Target target = 1;
}

message GetAttributesResponse {
  EntryMetadata data = 1;
}

message SetAttributesRequest {
  Target target = 1;
  FileAttributes attributes = 2;
}

message SetAttributesResponse {
  EntryMetadata data = 1;
}

message ReadRequest {
  Target target = 1;
  int64 offset = 2;
  optional int64 size = 3; // If not set, read all
}

message ReadResponse {
  bytes data = 1;
}

message WriteRequest {
  Target target = 1;
  int64 offset = 2;
  bytes data = 3;
}

message WriteResponse {
  int64 written = 1; // The number of bytes written
}

message CreateRequest {
  Target parent = 1;
  string name = 2;
  uint32 mode = 3; // File mode (permissions)
  EntryType type = 4; // Type of the entry to create
  FileAttributes attributes = 5;
}

message CreateResponse {
  EntryMetadata data = 1;
}

message DeleteRequest {
  Target target = 1;
}

message DeleteResponse {}

message RenameRequest {
  Target src = 1;
  Target dst = 2;
}

message RenameResponse {}

service FileSystemService {
  rpc Readdir(ReaddirRequest) returns (ReaddirResponse);
  rpc GetAttributes(GetAttributesRequest) returns (GetAttributesResponse);
  rpc SetAttributes(SetAttributesRequest) returns (SetAttributesResponse);
  rpc Read(ReadRequest) returns (ReadResponse);
  rpc Write(WriteRequest) returns (WriteResponse);
  rpc Create(CreateRequest) returns (CreateResponse);
  rpc Delete(DeleteRequest) returns (DeleteResponse);
  rpc Rename(RenameRequest) returns (RenameResponse);
}
